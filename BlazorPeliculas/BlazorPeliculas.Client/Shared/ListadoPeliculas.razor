@inject IJSRuntime js

<div>
    <p>Actualiza el estado de chk con una expresion explicita</p>
    <input type="checkbox" @onchange="@( ()=> MostrarBotones = !MostrarBotones )" />
    <span>Mostrar botones</span>
</div>

<p>Actualiza el estado de chk con bind</p>
<div>
    <input type="checkbox" @bind="MostrarBotones" />
    <span>Mostrar botones</span>
</div>


<ListadoGenerico Lista="Peliculas">
    <Registros>
        <PeliculaIndividual Pelicula="context" EliminarPelicula="EliminarPelicula" MostrarBotones="MostrarBotones" />
    </Registros>
</ListadoGenerico>



<ListadoGenerico Lista="Peliculas">
    <Registros Context="pelicula">
        <PeliculaIndividual Pelicula="pelicula" EliminarPelicula="EliminarPelicula" MostrarBotones="MostrarBotones" />
    </Registros>
</ListadoGenerico>


}

@code {
    [Parameter, EditorRequired]
    public List<Pelicula>? Peliculas { get; set; }

    public bool MostrarBotones { get; set; }


    //creamos un metodo para eliminar una pelicula
    public async Task EliminarPelicula(Pelicula pelicula)
    {
        // var confirmado = await js.InvokeAsync<bool>("confirm", $"Desea borrar la película {pelicula.Titulo} ?");
        var confirmado = await js.Confirm($"Desea borrar la película {pelicula.Titulo} ?");


        if (confirmado)
        {
            Console.WriteLine($"Eliminando la película");
            Peliculas!.Remove(pelicula);
            
        }
       
    }

}
