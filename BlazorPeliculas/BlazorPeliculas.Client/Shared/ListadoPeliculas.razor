@if (Peliculas is null)
{

    @if (Cargando is null)
    {
        <img src="https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif" />
    }
    else
    {
        @Cargando
    }
}
else if (Peliculas.Count == 0)
{
   


    @if (SinRegistros is null)
    {
       <p>Sin registros para mostrar.</p>
    }
    else
    {
        @SinRegistros
    }
}
else
{


    <div>
        <p>Actualiza el estado de chk con una expresion explicita</p>
        <input type="checkbox" @onchange="@( ()=> MostrarBotones = !MostrarBotones )" />
        <span>Mostrar botones</span>
    </div>

    <p>Actualiza el estado de chk con bind</p>
    <div>
        <input type="checkbox" @bind="MostrarBotones" />
        <span>Mostrar botones</span>
    </div>

    <div>
        <h3>Película</h3>
        @foreach (var pelicula in Peliculas)
        {
            <PeliculaIndividual Pelicula="pelicula" MostrarBotones="MostrarBotones" EliminarPelicula="EliminarPelicula"></PeliculaIndividual>
        }
    </div>

    @* 
    <br />
    <br />
    <h1>Películas con for</h1>

    <div>
        <h3>Película</h3>


        @for (int i = 0; i < Peliculas.Count; i++)
        {
            <div>
                <p>@(i + 1)) Título: <b> @Peliculas[i].Titulo</b></p>
                <p>Fecha lanzamiento: <b>@Peliculas[i].FechaLanzamiento.ToString("dd MMM yyyy")</b></p>
            </div>
            <hr />
        }


    </div> *@
}

@code {
    [Parameter, EditorRequired]
    public List<Pelicula>? Peliculas { get; set; }

    public bool MostrarBotones { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; } = null!; //Default

    [Parameter]
    public RenderFragment Cargando { get; set; } = null!;

    [Parameter]
    public RenderFragment SinRegistros { get; set; } = null!;


    //creamos un metodo para eliminar una pelicula
    public void EliminarPelicula(Pelicula pelicula)
    {
        Console.WriteLine($"Eliminando la película");
        Peliculas!.Remove(pelicula);
    }

}
