@if (Peliculas is null)
{
    <img src="https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif" />
}
else if (Peliculas.Count == 0)
{
    <p>No hay películas para mostrar!!</p>
}
else
{

    <div>
        <h3>Película</h3>
        @foreach (var pelicula in ObtenerPeliculas())
        {
            <div>
                <p>Título: @((MarkupString)pelicula.Titulo)</p>

                @if (DateTime.Today.Subtract(pelicula.FechaLanzamiento).Days <= 14)
                {
                    <span class="bg-danger">Nuevo!</span>
                }


                <p>Fecha lanzamiento: <b>@pelicula.FechaLanzamiento.ToString("dd MMM yyyy")</b></p>
            </div>
            <hr />
        }
    </div>


    <br />
    <br />
    <h1>Películas con for</h1>

    <div>
        <h3>Película</h3>


        @for (int i = 0; i < Peliculas.Count; i++)
        {
            <div>
                <p>@(i + 1)) Título: <b> @Peliculas[i].Titulo</b></p>
                <p>Fecha lanzamiento: <b>@Peliculas[i].FechaLanzamiento.ToString("dd MMM yyyy")</b></p>
            </div>
            <hr />
        }


    </div>
}

@code {
    List<Pelicula>? Peliculas { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        Peliculas = ObtenerPeliculas();        
    }

    List<Pelicula> ObtenerPeliculas()
    {
        return new List<Pelicula>() {
            new Pelicula { Titulo ="Pelicula 01", FechaLanzamiento = new DateTime(2023,01,01)},
            new Pelicula { Titulo ="Pelicula 02", FechaLanzamiento = new DateTime(2024,01,01)},
            new Pelicula { Titulo ="Pelicula 03", FechaLanzamiento = new DateTime(2025,03,14)},
        };
    }

}
